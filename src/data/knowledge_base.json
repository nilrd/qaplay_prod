{
  "syllabus": {
    "version": "4.0",
    "title": "ISTQB Certified Tester Foundation Level",
    "chapters": [
      {
        "id": 1,
        "title": "Fundamentos de Teste",
        "duration": "180 min",
        "sections": [
          {
            "id": "1.1",
            "title": "O que é teste?",
            "concepts": [
              {
                "id": "FL-1.1.1",
                "title": "Objetivos do teste",
                "description": "O teste é um processo que consiste em todas as atividades do ciclo de vida, tanto estáticas quanto dinâmicas, relacionadas ao planejamento, preparação e avaliação de produtos de software e produtos de trabalho relacionados para determinar se eles atendem aos requisitos especificados, para demonstrar que são adequados ao propósito e para detectar defeitos.",
                "level": "junior",
                "keywords": ["teste", "objetivos", "processo", "atividades", "ciclo de vida", "planejamento", "avaliação", "requisitos", "defeitos"]
              },
              {
                "id": "FL-1.1.2",
                "title": "Teste e depuração",
                "description": "Teste e depuração são atividades diferentes. O teste pode mostrar falhas causadas por defeitos no software. A depuração é a atividade de desenvolvimento que encontra, analisa e corrige tais defeitos.",
                "level": "junior",
                "keywords": ["teste", "depuração", "falhas", "defeitos", "desenvolvimento", "correção"]
              }
            ]
          },
          {
            "id": "1.2",
            "title": "Por que os testes são necessários?",
            "concepts": [
              {
                "id": "FL-1.2.1",
                "title": "Contribuições para o sucesso dos testes",
                "description": "O teste contribui para o sucesso ao detectar defeitos e falhas, fornecendo informações sobre a qualidade do software e reduzindo o risco de falhas em produção.",
                "level": "junior",
                "keywords": ["sucesso", "defeitos", "falhas", "qualidade", "risco", "produção"]
              },
              {
                "id": "FL-1.2.2",
                "title": "Testes e Garantia da Qualidade (QA)",
                "description": "Teste e QA são conceitos relacionados mas diferentes. QA é focada em processos adequados para fornecer confiança de que os níveis adequados de qualidade serão alcançados.",
                "level": "junior",
                "keywords": ["QA", "garantia da qualidade", "processos", "confiança", "qualidade"]
              },
              {
                "id": "FL-1.2.3",
                "title": "Erros, Defeitos, Falhas e Causas-raiz",
                "description": "Um erro humano pode produzir um defeito no código ou documento. Se um defeito no código for executado, o sistema pode falhar ao fazer o que deveria fazer, causando uma falha.",
                "level": "junior",
                "keywords": ["erro", "defeito", "falha", "causa-raiz", "código", "sistema"]
              }
            ]
          },
          {
            "id": "1.3",
            "title": "Princípios de Teste",
            "concepts": [
              {
                "id": "FL-1.3.1",
                "title": "Sete princípios de teste",
                "description": "1) O teste mostra a presença de defeitos, não a sua ausência; 2) Teste exaustivo é impossível; 3) Teste antecipado economiza tempo e dinheiro; 4) Defeitos se agrupam; 5) Cuidado com o paradoxo do pesticida; 6) O teste depende do contexto; 7) Ausência de erros é uma falácia.",
                "level": "pleno",
                "keywords": ["princípios", "defeitos", "teste exaustivo", "teste antecipado", "agrupamento", "paradoxo do pesticida", "contexto", "falácia"]
              }
            ]
          }
        ]
      },
      {
        "id": 2,
        "title": "Testes ao longo do Ciclo de Vida de Desenvolvimento de Software",
        "duration": "130 min",
        "sections": [
          {
            "id": "2.1",
            "title": "Testes no contexto de um Ciclo de Vida de Desenvolvimento de Software",
            "concepts": [
              {
                "id": "FL-2.1.1",
                "title": "Impacto do Ciclo de Vida de Desenvolvimento de Software nos Testes",
                "description": "O modelo de ciclo de vida de desenvolvimento de software escolhido impacta significativamente no teste, incluindo estratégia, técnicas, métodos e abordagem de teste.",
                "level": "pleno",
                "keywords": ["ciclo de vida", "desenvolvimento", "impacto", "estratégia", "técnicas", "métodos", "abordagem"]
              },
              {
                "id": "FL-2.1.4",
                "title": "DevOps e Testes",
                "description": "DevOps é uma abordagem organizacional que visa criar sinergia através da colaboração entre desenvolvimento e operações. Inclui automação de processos e testes contínuos.",
                "level": "senior",
                "keywords": ["DevOps", "colaboração", "desenvolvimento", "operações", "automação", "testes contínuos"]
              },
              {
                "id": "FL-2.1.5",
                "title": "Abordagem Shift-Left",
                "description": "Shift-left é uma abordagem onde o teste é realizado mais cedo no ciclo de vida de desenvolvimento, permitindo detecção precoce de defeitos e redução de custos.",
                "level": "senior",
                "keywords": ["shift-left", "teste antecipado", "ciclo de vida", "detecção precoce", "custos"]
              }
            ]
          },
          {
            "id": "2.2",
            "title": "Níveis de Teste e Tipos de Teste",
            "concepts": [
              {
                "id": "FL-2.2.1",
                "title": "Níveis de Teste",
                "description": "Os principais níveis de teste são: teste de componente, teste de integração, teste de sistema e teste de aceite. Cada nível tem objetivos específicos e diferentes focos.",
                "level": "pleno",
                "keywords": ["níveis de teste", "componente", "integração", "sistema", "aceite", "objetivos"]
              },
              {
                "id": "FL-2.2.2",
                "title": "Tipos de Teste",
                "description": "Os tipos de teste incluem teste funcional, teste não-funcional e teste estrutural. Cada tipo foca em diferentes aspectos da qualidade do software.",
                "level": "pleno",
                "keywords": ["tipos de teste", "funcional", "não-funcional", "estrutural", "qualidade"]
              }
            ]
          }
        ]
      },
      {
        "id": 3,
        "title": "Teste Estático",
        "duration": "80 min",
        "sections": [
          {
            "id": "3.1",
            "title": "Noções básicas de Teste Estático",
            "concepts": [
              {
                "id": "FL-3.1.1",
                "title": "Produtos de trabalho examináveis por testes estáticos",
                "description": "Teste estático pode ser aplicado a qualquer produto de trabalho que possa ser lido e compreendido, incluindo documentos, código-fonte, modelos e especificações.",
                "level": "junior",
                "keywords": ["teste estático", "produtos de trabalho", "documentos", "código-fonte", "modelos", "especificações"]
              },
              {
                "id": "FL-3.1.2",
                "title": "Valor do teste estático",
                "description": "O teste estático pode detectar defeitos antes mesmo da execução do código, sendo mais econômico que encontrar defeitos durante teste dinâmico ou em produção.",
                "level": "junior",
                "keywords": ["valor", "detecção precoce", "econômico", "teste dinâmico", "produção"]
              }
            ]
          },
          {
            "id": "3.2",
            "title": "Processo de feedback e revisão",
            "concepts": [
              {
                "id": "FL-3.2.1",
                "title": "Benefícios do feedback antecipado e frequente dos stakeholders",
                "description": "Feedback antecipado e frequente dos stakeholders ajuda a identificar problemas cedo, reduz retrabalho e melhora a qualidade do produto final.",
                "level": "pleno",
                "keywords": ["feedback", "stakeholders", "antecipado", "frequente", "problemas", "retrabalho", "qualidade"]
              },
              {
                "id": "FL-3.2.4",
                "title": "Tipos de revisão",
                "description": "Os principais tipos de revisão incluem revisão informal, walkthrough, revisão técnica e inspeção. Cada tipo tem diferentes níveis de formalidade e objetivos.",
                "level": "pleno",
                "keywords": ["tipos de revisão", "informal", "walkthrough", "técnica", "inspeção", "formalidade"]
              }
            ]
          }
        ]
      },
      {
        "id": 4,
        "title": "Análise e Modelagem de Teste",
        "duration": "390 min",
        "sections": [
          {
            "id": "4.2",
            "title": "Técnicas de Teste Caixa-Preta",
            "concepts": [
              {
                "id": "FL-4.2.1",
                "title": "Particionamento de Equivalência (EP)",
                "description": "Particionamento de equivalência divide dados de entrada em partições de dados equivalentes. Dados na mesma partição devem ser processados da mesma forma pelo componente ou sistema.",
                "level": "pleno",
                "keywords": ["particionamento de equivalência", "dados de entrada", "partições", "processamento"]
              },
              {
                "id": "FL-4.2.2",
                "title": "Análise de Valor de Limite (BVA)",
                "description": "Análise de valor de limite é uma extensão do particionamento de equivalência, focando nos valores nos limites das partições, onde defeitos são mais prováveis.",
                "level": "pleno",
                "keywords": ["análise de valor de limite", "limites", "partições", "defeitos"]
              },
              {
                "id": "FL-4.2.3",
                "title": "Teste de Tabela de Decisão",
                "description": "Teste de tabela de decisão é uma técnica de teste caixa-preta usada para testar diferentes combinações de entradas com suas ações associadas.",
                "level": "senior",
                "keywords": ["tabela de decisão", "combinações", "entradas", "ações"]
              }
            ]
          },
          {
            "id": "4.3",
            "title": "Técnicas de Teste Caixa-Branca",
            "concepts": [
              {
                "id": "FL-4.3.1",
                "title": "Teste de Instrução e Cobertura de Instrução",
                "description": "Cobertura de instrução mede a porcentagem de instruções executáveis que foram exercitadas por um conjunto de testes.",
                "level": "senior",
                "keywords": ["cobertura de instrução", "instruções executáveis", "conjunto de testes"]
              },
              {
                "id": "FL-4.3.2",
                "title": "Teste de Ramificação e Cobertura de Ramificação",
                "description": "Cobertura de ramificação mede a porcentagem de ramificações que foram exercitadas por um conjunto de testes.",
                "level": "senior",
                "keywords": ["cobertura de ramificação", "ramificações", "conjunto de testes"]
              }
            ]
          },
          {
            "id": "4.4",
            "title": "Técnicas de Teste Baseadas na Experiência",
            "concepts": [
              {
                "id": "FL-4.4.1",
                "title": "Suposição de Erro",
                "description": "Suposição de erro é uma técnica onde o testador usa sua experiência para antecipar defeitos que podem estar presentes no software.",
                "level": "senior",
                "keywords": ["suposição de erro", "experiência", "antecipar defeitos"]
              },
              {
                "id": "FL-4.4.2",
                "title": "Testes Exploratórios",
                "description": "Teste exploratório é uma abordagem onde o testador simultaneamente aprende sobre o software, projeta testes e executa testes.",
                "level": "senior",
                "keywords": ["teste exploratório", "aprendizado", "projeta testes", "executa testes"]
              }
            ]
          }
        ]
      },
      {
        "id": 5,
        "title": "Gerenciamento das Atividades de Teste",
        "duration": "335 min",
        "sections": [
          {
            "id": "5.1",
            "title": "Planejamento de Teste",
            "concepts": [
              {
                "id": "FL-5.1.1",
                "title": "Objetivo e conteúdo de um Plano de Teste",
                "description": "Um plano de teste documenta os meios e cronograma para atingir os objetivos de teste. Inclui escopo, abordagem, recursos e cronograma das atividades de teste.",
                "level": "pleno",
                "keywords": ["plano de teste", "objetivos", "escopo", "abordagem", "recursos", "cronograma"]
              },
              {
                "id": "FL-5.1.3",
                "title": "Critérios de Entrada e Critérios de Saída",
                "description": "Critérios de entrada definem quando o teste pode começar. Critérios de saída definem quando o teste pode ser considerado completo.",
                "level": "pleno",
                "keywords": ["critérios de entrada", "critérios de saída", "início do teste", "teste completo"]
              }
            ]
          }
        ]
      }
    ]
  },
  "difficulty_levels": {
    "junior": {
      "description": "Conceitos básicos e fundamentais de teste de software",
      "topics": ["Fundamentos", "Conceitos básicos", "Definições", "Princípios básicos"]
    },
    "pleno": {
      "description": "Técnicas de teste, processos e metodologias intermediárias",
      "topics": ["Técnicas de teste", "Processos", "Metodologias", "Planejamento"]
    },
    "senior": {
      "description": "Conceitos avançados, automação, DevOps e gestão de teste",
      "topics": ["Automação", "DevOps", "Gestão avançada", "Técnicas complexas"]
    }
  }
}

